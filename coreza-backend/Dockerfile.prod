# Multi-stage build for optimized production image
FROM python:3.10-slim as builder

WORKDIR /app
ENV PYTHONUNBUFFERED=1

# Install system dependencies and TA-Lib in builder stage
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    build-essential \
    wget \
    && wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz \
    && tar -xzf ta-lib-0.4.0-src.tar.gz \
    && cd ta-lib/ \
    && ./configure --prefix=/usr \
    && make \
    && make install \
    && cd .. \
    && rm -rf ta-lib* \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY coreza-backend/requirements.txt /app/requirements.txt

# Install Python dependencies with NumPy constraint to prevent 2.x upgrade
RUN pip install --upgrade pip setuptools wheel \
    && pip install --no-cache-dir --user "numpy>=1.26.2,<2.0" \
    && pip install --no-cache-dir --user -r /app/requirements.txt

# Production stage
FROM python:3.10-slim

WORKDIR /app
ENV PYTHONUNBUFFERED=1
ENV PATH="/root/.local/bin:$PATH"

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy TA-Lib from builder
COPY --from=builder /usr/lib/libta_lib* /usr/lib/
COPY --from=builder /usr/include/ta-lib/ /usr/include/ta-lib/

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Copy app code
COPY coreza-backend/ /app

EXPOSE 8000
# Point Uvicorn at main.py (where your FastAPI app = `app`)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
